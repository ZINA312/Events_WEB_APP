version: '3.8'

services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: EventsDB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Events_WEB_APP.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__EventsDatabase: "Host=postgres;Port=5432;Database=EventsDB;Username=postgres;Password=12345;"
    ports:
      - "8080:8080"
    volumes:
      - uploads:/app/wwwroot/uploads
      - dataprotection-keys:/root/.aspnet/DataProtection-Keys
    depends_on:
      postgres:
        condition: service_healthy
    command: 
      - /bin/bash
      - -c 
      - |
        echo "Waiting for PostgreSQL..."
        while ! nc -z postgres 5432; do sleep 1; done
        dotnet ef database update --project Events_WEB_APP.Persistence
        dotnet Events_WEB_APP.API.dll

volumes:
  postgres-data:
  uploads:
  dataprotection-keys: